<?php

/**
 * Implementation of hook_menu().
 */
function vk_fb_login_menu() {

  $items['admin/config/services/vk_fb_login'] = array(
    'title' => 'vKontakte Facebook login settings', 
    'page callback' => 'drupal_get_form', 
    'page arguments' => array('vk_fb_admin_settings'), 
    'access arguments' => array('administer site configuration'),
    'file' => 'vk_fb_login.admin.inc',
  	'description' => t('Facebook and vKontakte login settings'),
  );

  $items['login/vk'] = array(
    'page callback' => 'vk_login',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  $items['login/fb'] = array(
    'page callback' => 'fb_login',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['confirm-account'] = array(
    'page callback' => 'drupal_get_form',
    'page arguments' => array('vk_fb_login_confirm_form'),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implementation of hook_form_FORM_ID_alter().
 */
function vk_fb_login_form_user_login_alter(&$form) {
  _vk_fb_login_form_user_login_alter($form);
}

/**
 * Implementation of hook_form_FORM_ID_alter().
 */
function vk_fb_login_form_user_login_block_alter(&$form) {
  _vk_fb_login_form_user_login_alter($form);
}

function _vk_fb_login_form_user_login_alter(&$form) {
  drupal_add_css(drupal_get_path('module', 'vk_fb_login').'/css/vk_fb.css');

///Vkontakte button
  $vk_href = 'http://api.vk.com/oauth/authorize';
  $vk_query = array(
    'client_id' => variable_get('vk_fb_login_vk_app_id'),
    'redirect_uri' => 'http://'.$_SERVER['HTTP_HOST'].'/login/vk',
    'scope' => 'notify',
    'response_type' => 'code',
  );
  $vk_image = '<img title="'.t('Login Vkontakte').'" alt="'.t('Login Vkontakte').'"';
  $vk_image .= 'src="/' .drupal_get_path('module', 'vk_fb_login').'/images/vkontakte.png'.'">';
  $vk_button = l($vk_image, $vk_href , array('query' => $vk_query, 'html' => TRUE));

///Facebook button
  $_SESSION['state'] = md5(uniqid(rand(), TRUE));
  $fb_href = 'https://www.facebook.com/dialog/oauth';
  $fb_query = array(
    'client_id' => variable_get('vk_fb_login_fb_app_id'),
    'redirect_uri' => 'http://'.$_SERVER['HTTP_HOST'].'/login/fb',
    'state' => $_SESSION['state'],
  );
  $fb_image = '<img title="'.t('Login Facebook').'" alt="'.t('Login Facebook').'"';
  $fb_image .= 'src="/' .drupal_get_path('module', 'vk_fb_login').'/images/facebook.png'.'">';
  $fb_button = l($fb_image, $fb_href , array('query' => $fb_query, 'html' => TRUE));

  $form['vk_login_button'] = array(
    '#markup' => '<div id="vk_fb_login_buttons"><div id="vk_login">'.$vk_button.'</div><div id="fb_login">'.$fb_button.'</div></div>',
    '#weight' => 100,
  );

}

/*
 * Callback function for vKontakte authorization
 */
function vk_login(){

  if($user_data = vk_fb_login_get_vk_user_data())
  {
   // dpm($user_data);
    $user_uid = vk_fb_login_is_auth($user_data['uid'], 'vk');

    if($user_uid)
    {

      global $user;

      if($user = user_load($user_uid, FALSE))
      {
        drupal_set_message(t('Welcome!'));
        drupal_goto('user/'.$user_uid);
      }
      else
      {
        drupal_set_message(t('Authorization error!'), 'error');
      }

    }
    else
    {
      $message = t('Sorry, you don\'t have an account or your Vkontakte account is not confirmed.');
      $message .= '</br>';
      $message .= t('Please enter your email and password to confirm your Vkontakte account.');
      $message .= '</br>';
      $message .= t('Otherwise').' - '.l(t('register new account'), 'user/register');
      drupal_set_message($message);

      $_SESSION['vk_fb_login_user_data_vk'] = $user_data;
      drupal_goto('confirm-account');
    }

  }
  else
  {
    return drupal_set_message('Authorization error!', 'error');
  }
}

/*
 * Callback function for vKontakte authorization
 */

function fb_login(){
  if($user_data = vk_fb_login_get_fb_user_data())
  {
///    dpm($user_data);
    $user_uid = vk_fb_login_is_auth($user_data['id'], 'fb');

    if($user_uid)
    {
      global $user;

      if($user = user_load($user_uid, FALSE))
      {
        drupal_set_message(t('Welcome!'));
        drupal_goto('user/'.$user_uid);
      }
      else
      {
        drupal_set_message(t('Authorization error!'), 'error');
      }

    }
    else
    {
      $message = t('Sorry, you don\'t have an account or your Facebook account is not confirmed.');
      $message .= '</br>';
      $message .= t('Please enter your email and password to confirm your Facebook account.');
      $message .= '</br>';
      $message .= t('Otherwise').' - '.l(t('register new account'), 'user/register');
      drupal_set_message($message);

      $_SESSION['vk_fb_login_user_data_fb'] = $user_data;
      drupal_goto('confirm-account');
    }

  }

  else
  {
    return drupal_set_message('Authorization error!', 'error');
  }
}

/*
 * Check if users VK or FB account is already regisered
 */
function vk_fb_login_is_auth($id, $type){

  switch ($type){
    case 'vk';
      $query = db_select('login_vk_users', 'v');
      $query->fields('v',array('uid','vkuid'));
      $query->condition('v.`vkuid`', $id, '=');

      break;

    case 'fb';
      $query = db_select('login_fb_users', 'f');
      $query->fields('f',array('uid','fbuid'));
      $query->condition('f.`fbuid`', $id, '=');
       break;
  }
  $result = $query->execute()->fetchField();
    if($result) {
      return $result;
    }

  return FALSE;
}
/*
 * vKontakte authorization
 */
function vk_fb_login_get_vk_user_data(){

  if (isset($_GET['code'])) {
    $data = json_decode(file_get_contents(
      'https://oauth.vk.com/access_token?client_id='. variable_get('vk_fb_login_vk_app_id')
      .'&client_secret='. variable_get('vk_fb_login_vk_secret_key')
      .'&code='. $_GET['code']), TRUE);

    $fields = 'first_name,last_name,city,country,contacts';
    $user_data = json_decode(file_get_contents(
        'https://api.vk.com/method/users.get?uids='. $data['user_id']
        .'&fields='.$fields
        .'&access_token='.$data['access_token']), TRUE);

    $user_info = array_shift($user_data['response']);

    /// Get country by ID
    if (isset($user_info['country'])) {
      $response = json_decode(file_get_contents(
            'https://api.vk.com/method/places.getCountryById?cids='. $user_info['country']
            .'&access_token='.$data['access_token']), TRUE);
     $user_info['country'] = $response['response']['0']['name'];
    } else {unset($user_info['country']);}

    /// Get city by ID
    if (isset($user_info['city'])) {
      $response = json_decode(file_get_contents(
        'https://api.vk.com/method/places.getCityById?cids='. $user_info['city']
            .'&access_token='.$data['access_token']), TRUE);
      $user_info['city'] = $response['response']['0']['name'];
    } else {unset($user_info['city']);}

    return $user_info;

  }
  else{
    return FALSE;
  }

}

/*
 * Facebook authorization
 */
function vk_fb_login_get_fb_user_data() {

  $app_id = variable_get('vk_fb_login_fb_app_id');
  $app_secret = variable_get('vk_fb_login_fb_secret_key');
  $my_url = 'http://'.$_SERVER['HTTP_HOST'].'/login/fb';

 // session_start();
  $code = $_REQUEST["code"];

  if(empty($code)) {
    $_SESSION['state'] = md5(uniqid(rand(), TRUE)); //CSRF protection
    $dialog_url = "http://www.facebook.com/dialog/oauth?client_id="
        . $app_id . "&redirect_uri=" . urlencode($my_url) . "&state="
        . $_SESSION['state'];

   // echo("<script> top.location.href='" . $dialog_url . "'</script>");
  }

  if($_REQUEST['state'] == $_SESSION['state']) {
    $token_url = "https://graph.facebook.com/oauth/access_token?"
        . "client_id=" . $app_id . "&redirect_uri=" . urlencode($my_url)
        . "&client_secret=" . $app_secret . "&code=" . $code;

    $response = file_get_contents($token_url);
    $params = null;
    parse_str($response, $params);

    $graph_url = "https://graph.facebook.com/me?access_token="
                  .$params['access_token'];

    $user = json_decode(file_get_contents($graph_url), TRUE);

    return $user;
  }
  else {
    return FALSE;
  }

}

/*
 * Facebook or VK Confirmation form
 */
function vk_fb_login_confirm_form($form, &$form_state) {
 // dpm($_SESSION['vk_fb_login_user_data_fb']);
  $form['email']  = array(
    '#type' => 'textfield',
    '#title' => t('E-mail'),
    '#size' => 60,
    '#maxlength' => 128,
    '#required' => TRUE,
    '#description' => t('Enter your email'),
    '#element_validate' => array('element_validate_email'),
  );

  $form['password']  = array(
    '#type' => 'password',
    '#title' => t('Password'),
    '#size' => 60,
    '#maxlength' => 128,
    '#required' => TRUE,
    '#description' => t('Enter your password'),
  );
  $form['submit']  = array(
    '#type' => 'submit',
    '#value' => t('Confirm my account'),
  );

  return $form;
}

/**
 * Form element validation handler for email elements.
 */
function element_validate_email($element) {
  $value = $element['#value'];
  if (!valid_email_address($value)) {
    form_error($element, t('The email address is invalid.'));
  }
}


function vk_fb_login_confirm_form_validate($form, &$form_state) {
  if(!user_authenticate_by_mail($form_state['values']['email'], $form_state['values']['password'])){
    $message = t('Sorry, no user found with this pair of email and password');
    $message .= '</br>';
    $message .= t('Please enter your email and password correctly.');
    $message .= '</br>';
    $message .= t('Otherwise').' - '.l(t('register new account'), 'user/register');
    form_set_error('email', t('Incorrect email'));
    form_set_error('password', t('Incorrect password'));
    drupal_set_message($message);
    $_SESSION['vk_fb_login_user_email'] = $form_state['values']['email'];
  }
}

function vk_fb_login_confirm_form_submit($form, &$form_state) {
  if($uid = user_authenticate_by_mail($form_state['values']['email'], $form_state['values']['password'])){
    global $user;
    $user = user_load($uid);
    if(isset($_SESSION['vk_fb_login_user_data_vk']))
    {
      $vk_uid = $_SESSION['vk_fb_login_user_data_vk']['uid'];
      try{
        $insert = db_insert('login_vk_users');
        $insert->fields(array(
          'uid' => $uid,
          'vkuid' => $vk_uid,
        ));
        $insert->execute();
        unset($_SESSION['vk_fb_login_user_data_vk']);
      }
      catch (Exception $e) {
        watchdog('php', 'FILE:' . __FILE__ . ' LINE:' . __LINE__ . ' Caught exception: '.  $e->getMessage());
      }
      drupal_set_message(t('Welcome! Your Vkontakte account is successfully confirmed'));
    }
    elseif(isset($_SESSION['vk_fb_login_user_data_fb']))
    {
      try{
        $fb_uid = $_SESSION['vk_fb_login_user_data_fb']['id'];
        $insert = db_insert('login_fb_users');
        $insert->fields(array(
          'uid' => $uid,
          'fbuid' => $fb_uid,
        ));
        $insert->execute();
        unset($_SESSION['vk_fb_login_user_data_fb']);
      }
      catch (Exception $e) {
        watchdog('php', 'FILE:' . __FILE__ . ' LINE:' . __LINE__ . ' Caught exception: '.  $e->getMessage());
      }
      drupal_set_message(t('Welcome! Your Facebook account is successfully confirmed'));
    }
    $form_state['redirect'] = 'user/'.$uid;
  }
}


function user_authenticate_by_mail($email, $password) {
  $uid = FALSE;
  if (!empty($email) && !empty($password)) {
    $account = user_load_by_mail($email);
    if ($account) {
      // Allow alternate password hashing schemes.
      require_once DRUPAL_ROOT . '/' . variable_get('password_inc', 'includes/password.inc');
      if (user_check_password($password, $account)) {
        // Successful authentication.
        $uid = $account->uid;

        // Update user to new password scheme if needed.
        if (user_needs_new_hash($account)) {
          user_save($account, array('pass' => $password));
        }
      }
    }
  }
  return $uid;
}

/**
* Implementation of hook_user_insert()
*/
function vk_fb_login_user_insert(&$edit, $account, $category) {
  $uid = $account->uid;

  if(isset($_SESSION['vk_fb_login_user_data_vk'])){

    $vk_uid = $_SESSION['vk_fb_login_user_data_vk']['uid'];
    try{
      $insert = db_insert('login_vk_users');
      $insert->fields(array(
        'uid' => $uid,
        'vkuid' => $vk_uid,
      ));
      $insert->execute();
      unset($_SESSION['vk_fb_login_user_data_vk']);

    }
    catch (Exception $e) {
      watchdog('php', 'FILE:' . __FILE__ . ' LINE:' . __LINE__ . ' Caught exception: '.  $e->getMessage());
    }
  }

  if(isset($_SESSION['vk_fb_login_user_data_fb']['id'])){
    try{
      $fb_uid = $_SESSION['vk_fb_login_user_data_fb']['id'];
      $insert = db_insert('login_fb_users');
      $insert->fields(array(
        'uid' => $uid,
        'fbuid' => $fb_uid,
      ));
      $insert->execute();
      unset($_SESSION['vk_fb_login_user_data_fb']);
    }
    catch (Exception $e) {
      watchdog('php', 'FILE:' . __FILE__ . ' LINE:' . __LINE__ . ' Caught exception: '.  $e->getMessage());
    }
  }
}

/**
* Implementation of hook_user_delete()
*/
function vk_fb_login_user_delete($account) {
  db_delete('login_fb_users')
      ->condition('uid', $account->uid)
      ->execute();
  db_delete('login_vk_users')
      ->condition('uid', $account->uid)
      ->execute();
}
